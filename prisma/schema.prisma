generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Product {
  id          Int      @id @default(autoincrement()) // ID akan otomatis terisi saat data dimasukkan
  name        String
  description String?  // Kolom ini opsional
  price       Decimal  @db.Decimal(10, 2)  // Menyimpan harga dengan 2 angka di belakang koma
  stock       Int
  createdAt   DateTime @default(now())  // Akan diisi otomatis saat record pertama kali dibuat
  updatedAt   DateTime @updatedAt      // Akan diperbarui otomatis setiap kali data diubah
  orderItems  OrderItem[]              // Relasi dengan OrderItem
}


model Order {
  id          Int        @id @default(autoincrement())
  customerId  Int?
  orderDate   DateTime?  @default(now())
  status      String?    @default("Pending")
  totalAmount Decimal    @db.Decimal(10, 2)
  items       OrderItem[]
  payment     Payment[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int?
  productId Int?     // Menggunakan Int karena Product.id bertipe Int
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  order     Order?   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
}


model Payment {
  id          Int       @id @default(autoincrement())
  orderId     Int?
  paymentDate DateTime? @default(now())
  amount      Decimal   @db.Decimal(10, 2)
  method      String
  status      String?   @default("Paid")
  order       Order?    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}
